{"version":3,"sources":["components/ResultCard.js","components/NoResults.js","components/ResultsList.js","components/ResultDetails.js","components/SearchTypeControls.js","components/SearchBar.js","components/Error.js","components/Loading.js","services/MarvelService.js","components/LoadMore.js","App.js","index.js"],"names":["ResultCard","className","onClick","this","props","src","image","alt","title","Component","NoResults","msg","searchTerm","ResultsList","resultsElems","results","length","map","result","key","id","thumbnail","path","extension","searchType","name","onResultClick","ResultDetails","stories","available","description","urls","i","url","type","href","target","rel","onClose","SearchTypeControls","htmlFor","checked","onChange","onCharactersClick","onComicsClick","SearchBar","state","handleSubmit","bind","onSubmit","value","placeholder","e","setState","onSelect","preventDefault","Error","Loading","MarvelService","config","apiKey","comic","comics","character","characters","apikey","console","log","myRequestParams","getAuthConfig","endpoint","ENDPOINTS","axios","get","params","then","response","data","LoadMore","App","selectedResult","fetchCharacter","fetchMoreCharacters","fetchComic","fetchMoreComics","marvelService","resultsElem","hasError","isLoading","detailsElem","loadMoreElem","canLoadMore","_","prevState","prevSearchType","prevSearchTerm","fetchCharacters","fetchComics","getCharacters","nameStartsWith","total","offset","count","catch","err","error","getCharacter","getComics","titleStartsWith","getComic","ReactDOM","render","process","document","getElementById"],"mappings":"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","file":"static/js/main.f8c6a770.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class ResultCard extends Component {\n  render() {\n    return (\n      <button className=\"result-card\" onClick={ this.props.onClick }>\n        <figure className=\"result-card__image\">\n          <img src={ this.props.image } alt={ this.props.title } />\n        </figure>\n        <div className=\"result-card__info\">\n          <h2>{ this.props.title }</h2>\n        </div>\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class NoResults extends Component {\n  render() {\n    const msg = this.props.searchTerm\n      ? 'Whoops, we couldn\\'t find any results for \"' + this.props.searchTerm + '\". Why don\\'t you try another one?'\n      : 'Whoops, it looks like you haven\\'t searched for anything yet. Use the search bar above to get started!';\n\n    return (\n      <div className=\"no-results\">\n        <h1>{ msg }</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { ResultCard } from './ResultCard';\nimport { NoResults } from './NoResults';\n\nexport class ResultsList extends Component {\n  render() {\n    const resultsElems = this.props.results.length\n      ? this.props.results.map((result) => {\n        return (\n          <ResultCard\n            key={ result.id }\n            image={ result.thumbnail.path + '.' + result.thumbnail.extension }\n            title={ this.props.searchType === 'Characters' \n            ? result.name \n            : result.title }\n            onClick={ () => this.props.onResultClick(result.id) }\n          />\n        );\n      })\n      : <NoResults searchTerm={ this.props.searchTerm } />;\n\n    return (\n      <section className=\"results-list\">\n        { resultsElems }\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class ResultDetails extends Component {\n  render() {\n    return (\n      <article className=\"result-details\">\n        <div className=\"result-details__backdrop\"></div>\n        <div className=\"result-details__info\">\n          <div className=\"result-details__info__header\">\n            <figure>\n              <img src={ this.props.image } alt={ this.props.title } />\n            </figure>\n          </div>\n          <div className=\"result-details__info__body\">\n            <div className=\"result-details__info__body__content\">\n              <h1>{ this.props.title }</h1>\n              <p><strong>Appears In: { this.props.stories.available || 0 } stories</strong></p>\n              <p>{ this.props.description }</p>\n              <p><strong>Links:</strong></p>\n              <ul>\n                { this.props.urls.map(({ url, type }, i) => <li key={ i }><a href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{ type }</a></li>) }\n              </ul>\n            </div>\n            <button onClick={ this.props.onClose }></button>\n          </div>\n        </div>\n      </article>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class SearchTypeControls extends Component {\n  render() {\n    return (\n      <div className=\"search-type-controls\">\n        <label htmlFor=\"selectCharacters\">\n          <input\n            id=\"selectCharacters\"\n            name=\"searchType\"\n            type=\"radio\"\n            checked={ this.props.searchType === 'Characters' }\n            onChange={ this.props.onCharactersClick }\n          />\n          <span>Characters</span>\n        </label>\n        <label htmlFor=\"selectComics\">\n          <input\n            id=\"selectComics\"\n            name=\"searchType\"\n            type=\"radio\"\n            checked={ this.props.searchType === 'Comics' }\n            onChange={ this.props.onComicsClick }\n          />\n          <span>Comics</span>\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { SearchTypeControls } from './SearchTypeControls';\n\nexport class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      searchTerm: props.searchTerm,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <form className=\"search-bar\" onSubmit={ this.handleSubmit }>\n        <input\n          className=\"search-bar__field\"\n          type=\"text\"\n          value={ this.state.searchTerm }\n          placeholder=\"Heroes search (eg. Spider-Man)\"\n          onChange={ (e) => this.setState({ searchTerm: e.target.value })}\n        />\n        <SearchTypeControls \n        // onCharactersClick={ this.props.onSelect('Characters') }\n        // onComicsClick={ this.props.onSelect('Comics') }\n        onCharactersClick={ () => this.props.onSelect('Characters')}\n        onComicsClick={ () => this.props.onSelect('Comics')}\n        searchType={ this.props.searchType } \n        />\n        <button className=\"search-bar__submit\" type=\"submit\">Search</button>\n      </form>\n    );\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchTerm);\n  }\n}\n","import React, { Component } from 'react';\n\nexport class Error extends Component {\n  render() {\n    return (\n      <div className=\"error\">\n        <h1>Whoops, something went wrong!</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <h1>{ 'Loading results for \"' + this.props.searchTerm + '\".' }</h1>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nexport class MarvelService {\n\n  // --------------------------------------------------\n  // ENDPOINTS\n  // --------------------------------------------------\n  static get ENDPOINTS() {\n    return {\n      comic: 'https://gateway.marvel.com:443/v1/public/comics',\n      comics: 'https://gateway.marvel.com:443/v1/public/comics',\n      character: 'https://gateway.marvel.com:443/v1/public/characters',\n      characters: 'https://gateway.marvel.com:443/v1/public/characters',\n    };\n  }\n\n  // --------------------------------------------------\n  // SETUP\n  // --------------------------------------------------\n  constructor(config) {\n    this.apiKey = config.apiKey;\n  }\n\n  // --------------------------------------------------\n  // AUTHENTICATION\n  // --------------------------------------------------\n  getAuthConfig() {\n    return { apikey: this.apiKey };\n  }\n\n  // --------------------------------------------------\n  // CHARACTERS-RELATED METHODS\n  // --------------------------------------------------\n  getCharacters(config = {}) {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet.');\n    // TODO:\n    // - Create the `params` object.\n    console.log('Params object');\n    const myRequestParams = { ...config, ...this.getAuthConfig() };\n\n    // - Extract the correct endpoint from `ENDPOINTS`.\n    console.log('Endpoints object');\n    const endpoint = MarvelService.ENDPOINTS.characters;\n\n    // - Dispatch a request using `axios.get()`.\n    console.log('Axios request');\n    return axios.get(endpoint, { params: myRequestParams })\n      .then((response) => {\n        console.log(response.data.data);\n        return response.data.data;  // - Parse and return the response.\n      });\n  }\n\n  getCharacter(id, config = {}) {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet.');\n    // TODO:\n    // - Create the `params` object.\n    console.log('Params object');\n    const myRequestParams = { ...config, ...this.getAuthConfig() };\n\n    // - Extract the correct endpoint from `ENDPOINTS`; add the `id`.\n    console.log('Endpoings object');\n    const endpoint = `${MarvelService.ENDPOINTS.character}/${ id }`;\n\n    // - Dispatch a request using `axios.get()`.\n    console.log('Axios request');\n    return axios.get(endpoint, { params: myRequestParams })\n      .then((response) => {\n        console.log(response.data.data);\n        return response.data.data;  // - Parse and return the response.\n      });\n  }\n\n  getComics(config = {}) {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet.');\n    // TODO:\n    // - Create the `params` object.\n    console.log('Params object');\n    const myRequestParams = { ...config, ...this.getAuthConfig() };\n\n    // - Extract the correct endpoint from `ENDPOINTS`.\n    console.log('Endpoints object');\n    const endpoint = MarvelService.ENDPOINTS.comics;\n\n    // - Dispatch a request using `axios.get()`.\n    console.log('Axios request');\n    return axios.get(endpoint, { params: myRequestParams })\n      .then((response) => {\n        console.log(response.data.data);\n        return response.data.data;  // - Parse and return the response.\n      });\n  }\n\n  getComic(id, config = {}) {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet.');\n    // TODO:\n    // - Create the `params` object.\n    console.log('Params object');\n    const myRequestParams = { ...config, ...this.getAuthConfig() };\n\n    // - Extract the correct endpoint from `ENDPOINTS`; add the `id`.\n    console.log('Endpoings object');\n    const endpoint = `${MarvelService.ENDPOINTS.comic}/${ id }`;\n\n    // - Dispatch a request using `axios.get()`.\n    console.log('Axios request');\n    return axios.get(endpoint, { params: myRequestParams })\n      .then((response) => {\n        console.log(response.data.data);\n        return response.data.data;  // - Parse and return the response.\n      });\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport class LoadMore extends Component {\n  render() {\n    return (\n      <button className=\"load-more\" onClick={ this.props.onClick }>Load More</button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ResultsList } from './components/ResultsList';\nimport { ResultDetails } from './components/ResultDetails';\nimport { SearchBar } from './components/SearchBar';\nimport { Error } from './components/Error';\nimport { Loading } from './components/Loading';\nimport { MarvelService } from './services/MarvelService';\nimport { LoadMore } from './components/LoadMore';\n\nclass App extends Component {\n  // --------------------------------------------------\n  // SETUP\n  // --------------------------------------------------\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: '',\n      searchType: 'Characters',\n      results: [],\n      selectedResult: null,\n    };\n\n    // this.fetchCharacters = this.fetchCharacters.bind(this);\n    this.fetchCharacter = this.fetchCharacter.bind(this);\n    this.fetchMoreCharacters = this.fetchMoreCharacters.bind(this);\n    this.fetchComic = this.fetchComic.bind(this);\n    this.fetchMoreComics = this.fetchMoreComics.bind(this);\n\n    this.marvelService = new MarvelService({\n      apiKey: this.props.apiKey,\n    });\n  }\n\n  // --------------------------------------------------\n  // RENDER\n  // --------------------------------------------------\n  render() {\n    const resultsElem = this.state.hasError\n      ? <Error />\n      : this.state.isLoading\n        ? <Loading searchTerm={ this.state.searchTerm } />\n        : (\n          <ResultsList\n            results={ this.state.results }\n            searchTerm={ this.state.searchTerm }\n            searchType={ this.state.searchType}\n            onResultClick={\n              this.state.searchType === 'Characters'\n              ? this.fetchCharacter\n              : this.fetchComic\n             }\n          />\n        );\n\n    const detailsElem = this.state.selectedResult\n      ? (\n        <ResultDetails\n          image={ this.state.selectedResult.thumbnail.path +  '.' + this.state.selectedResult.thumbnail.extension }\n          title={ this.state.selectedResult.name }\n          description={ this.state.selectedResult.description }\n          stories={ this.state.selectedResult.stories }\n          urls={ this.state.selectedResult.urls }\n          onClose={ () => this.setState({ selectedResult: null } )}\n        />\n      )\n      : '';\n\n    const loadMoreElem = this.state.canLoadMore\n    ? (\n      <LoadMore onClick = { \n        this.state.searchType === 'Characters'\n        ? this.fetchMoreCharacters\n        : this.fetchMoreComics \n      } />\n    )\n    : '';\n\n    // Where does this go?\n\n    return (\n      <section className=\"app\">\n        <SearchBar\n          searchTerm={ this.state.searchTerm }\n          searchType={ this.state.searchType }\n          onSubmit={ (searchTerm) => this.setState({ searchTerm }) }\n          onSelect={ (searchType) => this.setState({ searchType }) }\n        />\n        { resultsElem }\n        { loadMoreElem }\n        { detailsElem }\n      </section>\n    );\n  }\n\n  // --------------------------------------------------\n  // LIFECYCLE\n  // --------------------------------------------------\n  componentDidUpdate(_, prevState) {\n    const searchType = this.state.searchType;\n    const searchTerm = this.state.searchTerm;\n    const prevSearchType = prevState.searchType;\n    const prevSearchTerm = prevState.searchTerm;\n\n    if (\n      searchTerm\n      && ((searchTerm !== prevSearchTerm) || (searchType !== prevSearchType))\n    ) {\n      if (searchType === 'Characters') {\n        this.fetchCharacters();\n      } else {\n        this.fetchComics();\n      }\n    }\n  }\n\n  // --------------------------------------------------\n  // FETCHING CHARACTERS\n  // --------------------------------------------------\n  fetchCharacters() {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet');\n    // TODO:\n    // Put the application into a loading state.\n    console.log('__ PUTTING THE APP INTO A LOADING STATE.'); \n    this.setState({ isLoading: true, hasError: false });\n\n    // Invoke the `getCharacters()` method on the marvel service.\n    this.marvelService.getCharacters( { nameStartsWith: this.state.searchTerm })  // Pass in the current `searchTerm` as `nameStartsWith`.\n      .then((data) => {\n        console.log('.then:');\n        console.log(data.results);\n\n        // Update the application state using the resulting data.\n        // Remove the loading state.\n        this.setState({ \n          results: data.results, \n          isLoading: false,\n          canLoadMore: data.total > data.offset + data.count  // Returns true when total number of results is greater than the offset (results skipped) plus results returned.\n        });  \n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ hasError: true });  // Handle potential errors.\n      });\n  }\n\n  fetchCharacter(id) {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet');\n    // TODO:\n    // Invoke the `getCharacter()` method on the marvel service.\n    console.log(' Loading an Hero!');\n    this.marvelService.getCharacter(id)  // Pass in the `id`.\n      .then((data) => {\n        console.log('.then:');\n        const result = data.results[0]\n        console.log(result);\n\n        this.setState({ selectedResult: result });  // Update the application state using the resulting data.\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ hasError: true });  // Handle potential errors.\n      });\n  }\n\n  fetchMoreCharacters() {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet');\n    // TODO:\n\n    // Invoke the `getCharacters()` method on the marvel service.\n    this.marvelService.getCharacters({ \n      nameStartsWith: this.state.searchTerm,  // Pass in the current `searchTerm` as `nameStartsWith`.\n      offset: this.state.results.length,  // Pass in the offset to find the next set of results.\n    })  \n      .then((data) => {\n        console.log('.then:');\n        console.log(data.results);\n\n        // Update the application state using the resulting data.\n        // Remove the loading state.\n        this.setState({ \n          results: [...this.state.results, ...data.results], \n          canLoadMore: data.total > data.offset + data.count  // Returns true when total number of results is greater than the offset (results skipped) plus results returned.\n        });  \n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ hasError: true });  // Handle potential errors.\n      });\n  }\n\n  // --------------------------------------------------\n  // FETCHING COMICS\n  // --------------------------------------------------\n  fetchComics() {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet');\n    // TODO:\n    // Put the application into a loading state.\n    console.log('__ PUTTING THE APP INTO A LOADING STATE.'); \n    this.setState({ isLoading: true, hasError: false });\n\n    // Invoke the `getCcomics()` method on the marvel service.\n    this.marvelService.getComics( { titleStartsWith: this.state.searchTerm })  // Pass in the current `searchTerm` as `nameStartsWith`.\n      .then((data) => {\n        console.log('.then:');\n        console.log(data.results);\n\n        // Update the application state using the resulting data.\n        // Remove the loading state.\n        this.setState({ \n          results: data.results, \n          isLoading: false,\n          canLoadMore: data.total > data.offset + data.count  // Returns true when total number of results is greater than the offset (results skipped) plus results returned.\n        });  \n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ hasError: true });  // Handle potential errors.\n      });\n  }\n\n\n  fetchComic(id) {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet');\n    // TODO:\n    // Invoke the `getComic()` method on the marvel service.\n    console.log(' Loading an Hero!');\n    this.marvelService.getComic(id)  // Pass in the `id`.\n      .then((data) => {\n        console.log('.then:');\n        const result = data.results[0]\n        console.log(result);\n\n        this.setState({ selectedResult: result });  // Update the application state using the resulting data.\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ hasError: true });  // Handle potential errors.\n      });\n  }\n\n\n  fetchMoreComics() {\n    // console.warn('Whoops, it looks like this method hasn\\'t been implemented yet');\n    // TODO:\n\n    // Invoke the `getComics()` method on the marvel service.\n    this.marvelService.getComics({ \n      titleStartsWith: this.state.searchTerm,  // Pass in the current `searchTerm` as `titleStartsWith`.\n      offset: this.state.results.length,  // Pass in the offset to find the next set of results.\n    })\n      .then((data) => {\n        console.log('.then:');\n        console.log(data.results);\n\n        // Update the application state using the resulting data.\n        // Remove the loading state.\n        this.setState({ \n          results: [...this.state.results, ...data.results], \n          canLoadMore: data.total > data.offset + data.count  // Returns true when total number of results is greater than the offset (results skipped) plus results returned.\n        });  \n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ hasError: true });  // Handle potential errors.\n      });\n  }\n\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Here we render the App component, passing the Marvel API key as property.\n// Since our application does not have access to environment variables at\n// runtime, the API key must be read in and exposed from within this file.\nReactDOM.render(<App apiKey={ process.env.REACT_APP_MARVEL_API_KEY } />, document.getElementById('root'));\n"],"sourceRoot":""}